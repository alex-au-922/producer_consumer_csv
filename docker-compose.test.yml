version: '3.8'
services:
  records_postgres:
    image: records_postgres:${POSTGRES_VERSION_TAG}
    container_name: records_postgres
    build:
      context: database
      dockerfile: dockerfile
      args:
        POSTGRES_VERSION_TAG: ${POSTGRES_VERSION_TAG}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      TZ: ${TZ}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ${POSTGRES_VOLUME_DIR}:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U ${POSTGRES_USERNAME}
      interval: 15s
      timeout: 10s
      retries: 5

  records_rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION_TAG}
    container_name: records_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      TZ: ${TZ}
    ports:
      - ${RABBITMQ_WEBAPP_PORT}:15672
      - ${RABBITMQ_PORT}:5672
    volumes:
      - ${RABBITMQ_VOLUME_DIR}:/var/lib/rabbitmq
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
