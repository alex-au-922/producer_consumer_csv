version: '3.8'
services:
  records_postgres:
    image: records_postgres:${POSTGRES_VERSION_TAG}
    container_name: records_postgres
    build:
      context: database
      dockerfile: dockerfile
      args:
        POSTGRES_VERSION_TAG: ${POSTGRES_VERSION_TAG}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_PORT}:5432
    restart: always
  records_rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION_TAG}
    container_name: records_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - ${RABBITMQ_WEBAPP_PORT}:15672
      - ${RABBITMQ_PORT}:5672
    restart: always
  records_producer:
    image: records_producer:latest
    container_name: records_producer
    build:
      context: producer
      dockerfile: dockerfile.prod
      args:
        AMAZON_LINUX_VERSION_TAG: ${AMAZON_LINUX_VERSION_TAG}
    environment:
      TARGET_FILE_DIR: ${TARGET_FILE_DIR}
      TARGET_FILE_EXTENSION: ${TARGET_FILE_EXTENSION}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_FORMAT: ${LOG_FORMAT}
      LOG_DATE_FORMAT: ${LOG_DATE_FORMAT}
      RABBITMQ_HOST: records_rabbitmq
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_QUEUE: ${QUEUE_NAME}

