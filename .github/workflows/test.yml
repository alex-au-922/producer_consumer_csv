name: Producer Consumer CI Test
on:
  push:
    branches: ["dev"]
  workflow_dispatch:
jobs:
  load-dotenv:
    runs-on: ubuntu-latest
    outputs:
      postgres-version-tag: ${{ steps.load-dotenv.outputs.postgres-version-tag }}
      postgres-port: ${{ steps.load-dotenv.outputs.postgres-port }}
      postgres-user: ${{ steps.load-dotenv.outputs.postgres-user }}
      postgres-password: ${{ steps.load-dotenv.outputs.postgres-password }}
      postgres-database: ${{ steps.load-dotenv.outputs.postgres-database }}
      rabbitmq-version-tag: ${{ steps.load-dotenv.outputs.rabbitmq-version-tag }}
      rabbitmq-port: ${{ steps.load-dotenv.outputs.rabbitmq-port }}
      rabbitmq-user: ${{ steps.load-dotenv.outputs.rabbitmq-user }}
      rabbitmq-password: ${{ steps.load-dotenv.outputs.rabbitmq-password }}
      queue-name: ${{ steps.load-dotenv.outputs.queue-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Load dotenv
        id: load-dotenv
        run: |
          set -o allexport
          source .env
          set +o allexport
          echo "POSTGRES_VERSION_TAG=$POSTGRES_VERSION_TAG" >> $GITHUB_OUTPUT
          echo "POSTGRES_PORT=$POSTGRES_PORT" >> $GITHUB_OUTPUT
          echo "POSTGRES_USER=$POSTGRES_USER" >> $GITHUB_OUTPUT
          echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> $GITHUB_OUTPUT
          echo "POSTGRES_DATABASE=$POSTGRES_DATABASE" >> $GITHUB_OUTPUT
          echo "RABBITMQ_VERSION_TAG=$RABBITMQ_VERSION_TAG" >> $GITHUB_OUTPUT
          echo "RABBITMQ_PORT=$RABBITMQ_PORT" >> $GITHUB_OUTPUT
          echo "RABBITMQ_USER=$RABBITMQ_USER" >> $GITHUB_OUTPUT
          echo "RABBITMQ_PASSWORD=$RABBITMQ_PASSWORD" >> $GITHUB_OUTPUT
          echo "QUEUE_NAME=$QUEUE_NAME" >> $GITHUB_OUTPUT
  test-producer:
    needs: load-dotenv
    runs-on: ubuntu-latest
    env:
      WORK_DIR: producer
    services:
      rabbitmq:
        image: rabbitmq:${{ needs.load-dotenv.outputs.rabbitmq-version-tag }}
        env:
          RABBITMQ_DEFAULT_USER: ${{ needs.load-dotenv.outputs.rabbitmq-user }}
          RABBITMQ_DEFAULT_PASS: ${{ needs.load-dotenv.outputs.rabbitmq-password }}
        options: >-
          --health-cmd "rabbitmq-diagnostics -q check_running"
          --health-interval 5s
          --health-timeout 30s
          --health-retries 3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: ${{ env.WORK_DIR }}/requirements-dev.txt
      - name: Install dependencies
        working-directory: ${{ env.WORK_DIR }}
        run: |
          pip install -r requirements-dev.txt
      - name: Run tests
        working-directory: ${{ env.WORK_DIR }}
        run: |
          coverage run -m pytest -v
          coverage xml -o coverage.xml
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ needs.load-dotenv.outputs.postgres-port }}
          POSTGRES_USER: ${{ needs.load-dotenv.outputs.postgres-user }}
          POSTGRES_PASSWORD: ${{ needs.load-dotenv.outputs.postgres-password }}
          POSTGRES_DATABASE: ${{ needs.load-dotenv.outputs.postgres-database }}
          RABBITMQ_HOST: localhost
          RABBITMQ_PORT: ${{ needs.load-dotenv.outputs.rabbitmq-port }}
          RABBITMQ_USER: ${{ needs.load-dotenv.outputs.rabbitmq-user }}
          RABBITMQ_PASSWORD: ${{ needs.load-dotenv.outputs.rabbitmq-password }}
          QUEUE_NAME: ${{ needs.load-dotenv.outputs.queue-name }}
      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          file: ${{ env.WORK_DIR }}/coverage.xml
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ env.WORK_DIR }}/coverage.xml
